name: Python CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        # Fetch full history for better analysis
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Lint with flake8
      run: |
        flake8 app tests
    
    - name: Format check with black
      run: |
        black --check app tests
    
    - name: Test with pytest
      run: |
        PYTHONPATH=. pytest --cov=app tests/ --cov-report=xml:coverage.xml
    
    - name: Build Docker image
      run: |
        docker build -t hello-world-app .
    
    - name: Test Docker image
      run: |
        docker run hello-world-app
        
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .
      
      - name: Run tests with coverage again
        run: |
          PYTHONPATH=. pytest --cov=app tests/ --cov-report=xml:coverage.xml
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=app
            -Dsonar.tests=tests
  
  deploy:
    needs: [test, sonarqube]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy application
      run: |
        echo "Deploying application..."
        # Placeholder for actual deployment commands
