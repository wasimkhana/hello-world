name: Python Code Quality
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
jobs:
  incremental-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt  # Use requirements-dev.txt
          pip install types-setuptools  # Add type stubs
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.py
      - name: Run Ruff on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          ruff check ${{ steps.changed-files.outputs.all_changed_files }}
      - name: Run Mypy on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          mypy --install-types --non-interactive ${{ steps.changed-files.outputs.all_changed_files }}
      - name: Run Bandit on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          bandit -r ${{ steps.changed-files.outputs.all_changed_files }} -x ./tests
  
  code-quality:
    needs: incremental-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for SonarQube to get full history
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt  # Use requirements-dev.txt
          pip install types-setuptools  # Add type stubs
          
      - name: Run Mypy
        run: |
          mypy --config-file mypy.ini --install-types --non-interactive .
        
      - name: Run Ruff
        run: ruff check .
        
      - name: Run Bandit
        run: bandit -r . -x ./tests
        
      - name: Run SonarQube Scanner
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
